version: '3.8'

services:
  qdrant:
    image: qdrant/qdrant:v1.12.0
    container_name: qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - ./docker/qdrant:/qdrant/storage

  typesense:
    image: typesense/typesense:27.1
    container_name: typesense
    ports:
      - "8108:8108"
    volumes:
      - ./docker/typesense:/data
    environment:
      - TYPESENSE_API_KEY=xyz123 # Replace with your secure API key in production
      - TYPESENSE_DATA_DIR=/data
    restart: unless-stopped

  postgres:
    image: postgres:17.2-alpine
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./docker/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres  # Change this in production
      - POSTGRES_DB=myapp
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  neo4j:
    image: neo4j:5.26.0
    container_name: neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - ./docker/neo4j/data:/data
      - ./docker/neo4j/logs:/logs
      - ./docker/neo4j/import:/import
      - ./docker/neo4j/plugins:/plugins
    environment:
      - NEO4J_AUTH=neo4j/your_password_here  # Change this in production
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4J_PLUGINS=["apoc"]  # Includes APOC plugin
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  qdrant_storage:
  typesense_data:
  postgres_data:
  neo4j_data: